    // 80x2 for a 16-tall kernel ends up being 10 accumulators.
	// We allocate 0-9 for that.
	// Since this is AVX-512 we can waste registers (we have 31)
	// So we can load all weights for 10 registers 10-19
	// And then we have inputs in 20-21

    vmovaps         zmm10,  [rax]
    vbroadcastss    zmm20,  dword ptr [rcx + 0]
	vbroadcastss    zmm21,  dword ptr [rcx + 4]
	vmovaps         zmm11,  [rax+64]

	vfmadd231ps     zmm0, zmm10, zmm20
	vmovaps         zmm12,  [rax+128]
	vfmadd231ps     zmm1, zmm10, zmm21
	vmovaps         zmm13,  [rax+192]
	vfmadd231ps     zmm2, zmm11, zmm20
	vmovaps         zmm14,  [rax+256]
	vfmadd231ps     zmm3, zmm11, zmm21

	vmovaps         zmm15,  [rax + 256 + 64]
	vbroadcastss    zmm22,  dword ptr [rcx + 8]
	vfmadd231ps     zmm4, zmm12, zmm20
	vfmadd231ps     zmm5, zmm12, zmm21

	vbroadcastss    zmm23,  dword ptr [rcx + 12]
	vfmadd231ps     zmm6, zmm13, zmm20
	vfmadd231ps     zmm7, zmm13, zmm21

	vmovaps         zmm16,  [rax + 256 + 64+64]
	vfmadd231ps     zmm8, zmm14, zmm20
	vfmadd231ps     zmm9, zmm14, zmm21

	vmovaps         zmm17,  [rax + 256 + 64+128]
	vfmadd231ps     zmm0, zmm15, zmm22
	vfmadd231ps     zmm1, zmm15, zmm23

	vmovaps         zmm18,  [rax + 256 + 64+192]
	vfmadd231ps     zmm2, zmm16, zmm22
	vfmadd231ps     zmm3, zmm16, zmm23

	vmovaps         zmm19,  [rax + 256 + 64+256]
	vfmadd231ps     zmm4, zmm17, zmm22
	vfmadd231ps     zmm5, zmm17, zmm23

	vfmadd231ps     zmm6, zmm18, zmm22
	vfmadd231ps     zmm7, zmm18, zmm23

	vfmadd231ps     zmm8, zmm19, zmm22
	vfmadd231ps     zmm9, zmm19, zmm23
